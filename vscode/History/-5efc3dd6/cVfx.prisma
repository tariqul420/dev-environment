generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userRole {
  admin
  recruiter
  candidate
}

enum interviewStatus {
  scheduled
  ongoing
  completed
  cancelled
}

model User {
  id              String         @id @default(uuid())
  clerkId         String         @unique
  email           String         @unique
  name            String
  role            userRole       @default(candidate)
  profilePicture  String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  interviewsAsCandidate Interview[] @relation("CandidateInterviews")
  interviewsAsInterviewer Interview[] @relation("InterviewerInterviews")
  comments        Comment[]
  @@map("users")
  @@index([email, clerkId])
}

model Interview {
  id              String         @id @default(uuid())
  title           String
  description     String?
  startTime       Int
  endTime         Int?
  status          interviewStatus @default(scheduled)
  streamCallId    String
  candidateId     String
  candidate       User           @relation("CandidateInterviews", fields: [candidateId], references: [id])
  interviewerIds  String[]
  interviewers    User[]         @relation("InterviewerInterviews", fields: [interviewerIds], references: [id])
  comments        Comment[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  @@map("interviews")
  @@index([candidateId, streamCallId])
}

model Comment {
  id              String         @id @default(uuid())
  content         String
  rating          Float
  interviewerId   String
  interviewer     User           @relation(fields: [interviewerId], references: [id])
  interviewId     String
  interview       Interview      @relation(fields: [interviewId], references: [id])
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  @@map("comments")
  @@index([interviewerId, interviewId])
}