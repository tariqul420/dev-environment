networks:
  proxy:
    external: true
  appnet:
    external: true

services:
  naturalsefa:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: naturalsefa

    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1

    expose:
      - "3000"

    restart: unless-stopped

    networks:
      - proxy
      - appnet

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"

      # ---- Apex router ----
      - "traefik.http.routers.ns.rule=Host(`naturalsefaa.com`)"
      - "traefik.http.routers.ns.entrypoints=websecure"
      - "traefik.http.routers.ns.tls=true"
      - "traefik.http.routers.ns.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ns.service=ns"

      # ---- Service ----
      - "traefik.http.services.ns.loadbalancer.server.port=3000"
      - "traefik.http.services.ns.loadbalancer.passhostheader=true"

      # ---- www â†’ non-www redirect (HTTPS) ----
      - "traefik.http.routers.ns-www.rule=Host(`www.naturalsefaa.com`)"
      - "traefik.http.routers.ns-www.entrypoints=websecure"
      - "traefik.http.routers.ns-www.tls=true"
      - "traefik.http.routers.ns-www.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ns-www.middlewares=redirect-to-apex@docker"

      # Redirect middleware (preserves path & query)
      - "traefik.http.middlewares.redirect-to-apex.redirectregex.regex=^https?://www\\.naturalsefaa\\.com(.*)"
      - "traefik.http.middlewares.redirect-to-apex.redirectregex.replacement=https://naturalsefaa.com$1"
      - "traefik.http.middlewares.redirect-to-apex.redirectregex.permanent=true"
