networks:
  proxy:
    external: true
  appnet:
    external: true

services:
  toolshub:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: builder
      args:
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
        DATABASE_URL: ${DATABASE_URL}
    container_name: toolshub

    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3005
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=${DATABASE_URL}

    expose:
      - '3005'

    restart: unless-stopped

    networks:
      - proxy
      - appnet
    command: ["npx", "prisma", "migrate", "deploy"]
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=proxy'

      # Router (apex)
      - 'traefik.http.routers.toolshub.rule=Host(`toolshub.tariqul.dev`)'
      - 'traefik.http.routers.toolshub.entrypoints=websecure'
      - 'traefik.http.routers.toolshub.tls=true'
      - 'traefik.http.routers.toolshub.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.toolshub.service=toolshub-svc'

      # Service
      - 'traefik.http.services.toolshub-svc.loadbalancer.server.port=3005'
      - 'traefik.http.services.toolshub-svc.loadbalancer.passhostheader=true'

      # www â†’ non-www (HTTPS)
      - 'traefik.http.routers.toolshub-www.rule=Host(`www.toolshub.tariqul.dev`)'
      - 'traefik.http.routers.toolshub-www.entrypoints=websecure'
      - 'traefik.http.routers.toolshub-www.tls=true'
      - 'traefik.http.routers.toolshub-www.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.toolshub-www.middlewares=toolshub-redirect@docker'

      # Redirect middleware
      - "traefik.http.middlewares.toolshub-redirect.redirectregex.regex=^https?://www\\.toolshub\\.tariqul\\.dev(.*)"
      - 'traefik.http.middlewares.toolshub-redirect.redirectregex.replacement=https://toolshub.tariqul.dev$1'
      - 'traefik.http.middlewares.toolshub-redirect.redirectregex.permanent=true'