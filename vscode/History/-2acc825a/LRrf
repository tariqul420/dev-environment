# ---- Build ----
FROM node:20-alpine AS builder
WORKDIR /app

# Optional build-time flag (example: skip DB calls during build)
ARG SKIP_DB=1
ENV SKIP_DB=$SKIP_DB
ENV NEXT_TELEMETRY_DISABLED=1

# Install minimal deps (alpine needs this sometimes for native modules)
RUN apk add --no-cache libc6-compat

COPY package*.json ./
RUN npm ci

# Copy source and build
COPY . .
RUN npm run build

# ---- Run (standalone) ----
FROM node:20-alpine
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME=0.0.0.0

# (Sometimes needed for native modules on alpine)
RUN apk add --no-cache libc6-compat

# 1) Create non-root user/group first (Alpine style)
RUN addgroup -S nextjs && adduser -S -G nextjs nextjs

# 2) Copy build output with correct ownership
COPY --from=builder --chown=nextjs:nextjs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nextjs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nextjs /app/public ./public

# 3) Ensure cache dir exists (owned by nextjs)
RUN mkdir -p /app/.next/cache

USER nextjs
EXPOSE 3000
CMD ["node", "server.js"]
