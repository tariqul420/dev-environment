// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js';
import type { NextRequest } from 'next/server.js';
import type { AppRouteHandlerRoutes, AppRoutes, LayoutRoutes, ParamMap } from './routes.js';

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default:
    | React.ComponentType<{ params: Promise<ParamMap[Route]> } & any>
    | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>);
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[];
  generateMetadata?: (props: { params: Promise<ParamMap[Route]> } & any, parent: ResolvingMetadata) => Promise<any> | any;
  generateViewport?: (props: { params: Promise<ParamMap[Route]> } & any, parent: ResolvingViewport) => Promise<any> | any;
  metadata?: any;
  viewport?: any;
};

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>);
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[];
  generateMetadata?: (props: { params: Promise<ParamMap[Route]> } & any, parent: ResolvingMetadata) => Promise<any> | any;
  generateViewport?: (props: { params: Promise<ParamMap[Route]> } & any, parent: ResolvingViewport) => Promise<any> | any;
  metadata?: any;
  viewport?: any;
};

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void;
};

// Validate ../../app/(marketing)/about/page.tsx
{
  const handler = {} as typeof import('../../app/(marketing)/about/page.js');
  handler satisfies AppPageConfig<'/about'>;
}

// Validate ../../app/(marketing)/privacy/page.tsx
{
  const handler = {} as typeof import('../../app/(marketing)/privacy/page.js');
  handler satisfies AppPageConfig<'/privacy'>;
}

// Validate ../../app/(marketing)/terms/page.tsx
{
  const handler = {} as typeof import('../../app/(marketing)/terms/page.js');
  handler satisfies AppPageConfig<'/terms'>;
}

// Validate ../../app/[id]/page.tsx
{
  const handler = {} as typeof import('../../app/[id]/page.js');
  handler satisfies AppPageConfig<'/[id]'>;
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import('../../app/page.js');
  handler satisfies AppPageConfig<'/'>;
}

// Validate ../../app/tools/(tools)/calc/bmi/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/bmi/page.js');
  handler satisfies AppPageConfig<'/tools/calc/bmi'>;
}

// Validate ../../app/tools/(tools)/calc/currency/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/currency/page.js');
  handler satisfies AppPageConfig<'/tools/calc/currency'>;
}

// Validate ../../app/tools/(tools)/calc/date-diff/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/date-diff/page.js');
  handler satisfies AppPageConfig<'/tools/calc/date-diff'>;
}

// Validate ../../app/tools/(tools)/calc/discount/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/discount/page.js');
  handler satisfies AppPageConfig<'/tools/calc/discount'>;
}

// Validate ../../app/tools/(tools)/calc/emi/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/emi/page.js');
  handler satisfies AppPageConfig<'/tools/calc/emi'>;
}

// Validate ../../app/tools/(tools)/calc/percentage/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/percentage/page.js');
  handler satisfies AppPageConfig<'/tools/calc/percentage'>;
}

// Validate ../../app/tools/(tools)/calc/scientific/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/scientific/page.js');
  handler satisfies AppPageConfig<'/tools/calc/scientific'>;
}

// Validate ../../app/tools/(tools)/calc/standard/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/standard/page.js');
  handler satisfies AppPageConfig<'/tools/calc/standard'>;
}

// Validate ../../app/tools/(tools)/calc/tip-split/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/tip-split/page.js');
  handler satisfies AppPageConfig<'/tools/calc/tip-split'>;
}

// Validate ../../app/tools/(tools)/calc/unit-converter/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/calc/unit-converter/page.js');
  handler satisfies AppPageConfig<'/tools/calc/unit-converter'>;
}

// Validate ../../app/tools/(tools)/dev/api-tester/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/api-tester/page.js');
  handler satisfies AppPageConfig<'/tools/dev/api-tester'>;
}

// Validate ../../app/tools/(tools)/dev/base64/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/base64/page.js');
  handler satisfies AppPageConfig<'/tools/dev/base64'>;
}

// Validate ../../app/tools/(tools)/dev/hash-generator/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/hash-generator/page.js');
  handler satisfies AppPageConfig<'/tools/dev/hash-generator'>;
}

// Validate ../../app/tools/(tools)/dev/json-formatter/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/json-formatter/page.js');
  handler satisfies AppPageConfig<'/tools/dev/json-formatter'>;
}

// Validate ../../app/tools/(tools)/dev/jwt-decode/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/jwt-decode/page.js');
  handler satisfies AppPageConfig<'/tools/dev/jwt-decode'>;
}

// Validate ../../app/tools/(tools)/dev/lorem-ipsum/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/lorem-ipsum/page.js');
  handler satisfies AppPageConfig<'/tools/dev/lorem-ipsum'>;
}

// Validate ../../app/tools/(tools)/dev/markdown-previewer/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/markdown-previewer/page.js');
  handler satisfies AppPageConfig<'/tools/dev/markdown-previewer'>;
}

// Validate ../../app/tools/(tools)/dev/password-generator/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/password-generator/page.js');
  handler satisfies AppPageConfig<'/tools/dev/password-generator'>;
}

// Validate ../../app/tools/(tools)/dev/regex-library/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/regex-library/page.js');
  handler satisfies AppPageConfig<'/tools/dev/regex-library'>;
}

// Validate ../../app/tools/(tools)/dev/regex-tester/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/regex-tester/page.js');
  handler satisfies AppPageConfig<'/tools/dev/regex-tester'>;
}

// Validate ../../app/tools/(tools)/dev/uuid-nanoid/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/dev/uuid-nanoid/page.js');
  handler satisfies AppPageConfig<'/tools/dev/uuid-nanoid'>;
}

// Validate ../../app/tools/(tools)/finance/salary-hourly/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/finance/salary-hourly/page.js');
  handler satisfies AppPageConfig<'/tools/finance/salary-hourly'>;
}

// Validate ../../app/tools/(tools)/finance/savings-goal/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/finance/savings-goal/page.js');
  handler satisfies AppPageConfig<'/tools/finance/savings-goal'>;
}

// Validate ../../app/tools/(tools)/finance/vat/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/finance/vat/page.js');
  handler satisfies AppPageConfig<'/tools/finance/vat'>;
}

// Validate ../../app/tools/(tools)/image/bg-remove/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/bg-remove/page.js');
  handler satisfies AppPageConfig<'/tools/image/bg-remove'>;
}

// Validate ../../app/tools/(tools)/image/compress/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/compress/page.js');
  handler satisfies AppPageConfig<'/tools/image/compress'>;
}

// Validate ../../app/tools/(tools)/image/convert/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/convert/page.js');
  handler satisfies AppPageConfig<'/tools/image/convert'>;
}

// Validate ../../app/tools/(tools)/image/exif-remove/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/exif-remove/page.js');
  handler satisfies AppPageConfig<'/tools/image/exif-remove'>;
}

// Validate ../../app/tools/(tools)/image/resize/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/resize/page.js');
  handler satisfies AppPageConfig<'/tools/image/resize'>;
}

// Validate ../../app/tools/(tools)/image/sprite/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/image/sprite/page.js');
  handler satisfies AppPageConfig<'/tools/image/sprite'>;
}

// Validate ../../app/tools/(tools)/text/base64/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/text/base64/page.js');
  handler satisfies AppPageConfig<'/tools/text/base64'>;
}

// Validate ../../app/tools/(tools)/text/case-converter/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/text/case-converter/page.js');
  handler satisfies AppPageConfig<'/tools/text/case-converter'>;
}

// Validate ../../app/tools/(tools)/text/slugify/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/url/qr/page.jsxge.js');
  handler satisfies AppPageConfig<'/tools/text/slugify'>;
}

// Validate ../../app/tools/(tools)/text/word-counter/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/text/word-counter/page.js');
  handler satisfies AppPageConfig<'/tools/text/word-counter'>;
}

// Validate ../../app/tools/(tools)/url/qr/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/url/qr/page.js');
  handler satisfies AppPageConfig<'/tools/url/qr'>;
}

// Validate ../../app/tools/(tools)/url/shortener/analytics/[id]/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/url/shortener/analytics/[id]/page.js');
  handler satisfies AppPageConfig<'/tools/url/shortener/analytics/[id]'>;
}

// Validate ../../app/tools/(tools)/url/shortener/interstitial/[id]/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/url/shortener/interstitial/[id]/page.js');
  handler satisfies AppPageConfig<'/tools/url/shortener/interstitial/[id]'>;
}

// Validate ../../app/tools/(tools)/url/shortener/page.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/url/shortener/page.js');
  handler satisfies AppPageConfig<'/tools/url/shortener'>;
}

// Validate ../../app/tools/page.tsx
{
  const handler = {} as typeof import('../../app/tools/page.js');
  handler satisfies AppPageConfig<'/tools'>;
}

// Validate ../../app/api/rates/route.ts
{
  const handler = {} as typeof import('../../app/api/rates/route.js');
  handler satisfies RouteHandlerConfig<'/api/rates'>;
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import('../../app/layout.js');
  handler satisfies LayoutConfig<'/'>;
}

// Validate ../../app/tools/(tools)/layout.tsx
{
  const handler = {} as typeof import('../../app/tools/(tools)/layout.js');
  handler satisfies LayoutConfig<'/tools'>;
}

// Validate ../../app/tools/layout.tsx
{
  const handler = {} as typeof import('../../app/tools/layout.js');
  handler satisfies LayoutConfig<'/tools'>;
}
